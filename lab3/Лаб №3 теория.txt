1. В языке программирования C#, "generic" (или обобщения) — это механизм, который позволяет создавать классы, методы и интерфейсы с параметрами типа. Это означает, что вы можете определить структуру данных или алгоритм, который может работать с любым типом данных, без необходимости дублировать код для каждого конкретного типа.

2. Интерфейс в C# — это контракт, который определяет набор методов, свойств, событий или индексаторов, которые класс или структура должны реализовать. Интерфейсы не содержат реализаций методов, а только их сигнатуры. Это позволяет различным классам реализовывать один и тот же интерфейс по-разному, обеспечивая гибкость и полиморфизм в объектно-ориентированном программировании.

3. IComparable — это интерфейс в .NET, который определяет метод для сравнения объектов. Этот интерфейс используется для упорядочивания или сортировки объектов. Он содержит один метод, CompareTo, который должен быть реализован в классе, чтобы определить, как сравнивать текущий объект с другим объектом того же типа.

4. IEnumerable — это интерфейс в .NET, который определяет итератор для коллекции. Он предоставляет механизм для перебора элементов коллекции без раскрытия базовой структуры коллекции.

5. Функция обратного вызова (callback function) — это функция, которая передается в другую функцию в качестве аргумента и вызывается позже, когда наступает определенное событие или выполняется определенное условие. Для хранения ссылок обратного вызова предусмотрен специальный вид коллекции - делегат

6. Делегаты - список ссылок на функции с одинаковыми заголовками. Они позволяют хранить и вызывать методы как объекты. 

7. Событие - элемент класса делегат.  Механизм, который позволяет объектам уведомлять другие объекты о том, что произошло определенное действие.

8. Ключевое слово base в C# используется для доступа к членам базового класса из производного класса.